This package create a python module called sciscipy
It provides a link between python and scilab by defining 
3 functions:

- sciscipy.eval(sci_cmd)
- sciscipy.read(sci_var_name)
- sciscipy.write(sci_var_name, py_var_name)

To increase the level of enjoyment, a python module 
called scilab is also provided. This package contains a 
class 'Scilab' that can be used to issue any valid scilab 
command. Use it as follows:

>>> from scilab import Scilab
>>> sci = Scilab()
>>> (any_output, ...) = sci.any_func(param1, ...)

INSTALL
========

LINUX

$ ./setup build
$ ./setup install

WINDOWS

c:\Python26\python.exe setup.py build --compiler=mingw32
c:\Python26\python.exe setup.py build install

RUN
===

LINUX

the LD_LIBRARY_PATH environment variable must be set, for instance to

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/jvm/java-6-openjdk/jre/lib/amd64/:/usr/lib/jvm/java-6-openjdk//jre/lib/amd64/server/
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/jvm/java-6-openjdk/jre/lib/amd64/native_threads/
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/scilab
export SCI=/usr/share/scilab

See http://www.scilab.org/product/man/compile_and_run_call_scilab.html 

WINDOWS

must include C:\Program Files (x86)\scilab-5.2.1\bin in the path

and set the SCI enironment variable to C:\Program Files (x86)\scilab-5.2.1\










